name: Build Unity Projects and Deploy them

on:
  push:
    branches:
      - deployment

permissions:
  pages: write # to deploy to Pages
  id-token: write
  contents: write

jobs:
  build_webgl:
    name: Build WEBGL
    runs-on: ubuntu-latest
    steps:
      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true

      # Cache
      - uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-

      # Build WEBGL
      - name: Build project
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: WebGL

      # Output
      - uses: actions/upload-artifact@v3
        with:
          name: WEBGL
          path: build


  build_windows:
    name: Build Windows
    runs-on: ubuntu-latest
    steps:
      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true

      # Cache
      - uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-

      # Build Windows
      - name: Build project
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: StandaloneWindows64
          allowDirtyBuild: true

      # Output
      - uses: actions/upload-artifact@v3
        with:
          name: Windows_Build
          path: build

  release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Download Windows artifacts
        uses: actions/download-artifact@v3
        with:
          name: Windows_Build # Name of the artifact to download\

      - name: List contents of build directory
        run: |
          pwd
          ls

      - name: Zip up Windows Build
        uses: thedoctor0/zip-release@master
        with:
          filename: Windows_Build.zip
          exclusions: "*.git* /*node_modules/* .editorconfig /*Assets/* /*Packages/* /*ProjectSettings/* .md"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release ${{ github.run_number }} # Set the release name
          body: |
            Latest Windows build of permanence break
          draft: false
          prerelease: false

      - name: Attach Windows Build to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./Windows_Build.zip
          asset_name: Permanence-break-ver${{github.run_number}}.zip
          asset_content_type: application/zip
